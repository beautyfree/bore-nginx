server {
    resolver {{ default .Env.DNS_RESOLVER "127.0.0.11" }} valid=30s ipv6=off;
    resolver_timeout 2s;

    listen 80;
    server_name ~^(?P<port>\d+)\.bore\.tacticlaunch\.com$;

    error_log /dev/stdout warn;
    access_log off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

    location / {
        set $upstream_host {{ default .Env.BORE_HOST "bore-server" }};
        set $upstream_port $port;
        proxy_pass http://$upstream_host:$upstream_port;
        
        # Performance optimizations
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
        proxy_max_temp_file_size 1024m;
        
        # Connection optimizations
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        
        # HTTP/1.1 optimizations
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Disable proxy intercept errors
        proxy_intercept_errors off;
    }
}

# Fallback server for debugging
server {
    listen 80 default_server;
    server_name _;

    error_log /dev/stdout info;
    access_log /dev/stdout;

    location / {
        return 200 "Debug: Host=$host, Server=$server_name\n";
        add_header Content-Type text/plain;
    }
}
